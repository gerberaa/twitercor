#!/usr/bin/env python3
"""
Quick Account Check

Fast check to see if your Twitter/X account is working.

Usage:
    python quick_check.py
"""

import asyncio
import sys
from twscrape import API


async def quick_test():
    """Quick test of account functionality."""
    print("‚ö° –®–≤–∏–¥–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫–∞—É–Ω—Ç—É")
    print("=" * 30)
    
    api = API()
    
    # Check if we have accounts
    try:
        accounts = await api.pool.accounts_info()
        
        if not accounts:
            print("‚ùå –ê–∫–∞—É–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
            print("üí° –°–ø–æ—á–∞—Ç–∫—É –¥–æ–¥–∞–π—Ç–µ –∞–∫–∞—É–Ω—Ç: python quick_add_account.py")
            return False
        
        active_accounts = [acc for acc in accounts if acc.get('active', False)]
        
        if not active_accounts:
            print("‚ùå –ê–∫—Ç–∏–≤–Ω—ñ –∞–∫–∞—É–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
            print("üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç–∞—Ç—É—Å –∞–∫–∞—É–Ω—Ç—É: python check_account.py")
            return False
        
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(active_accounts)} –∞–∫—Ç–∏–≤–Ω–∏—Ö –∞–∫–∞—É–Ω—Ç—ñ–≤")
        
        # Test with first active account
        print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ API...")
        
        user = await api.user_by_login("elonmusk")  # Use Elon Musk as test (more reliable)
        
        if user:
            print(f"‚úÖ API –ø—Ä–∞—Ü—é—î! –£—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ @{user.username}")
            print(f"   üë• –ü—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤: {user.followersCount:,}")
            print(f"   üìù –¢–≤—ñ—Ç—ñ–≤: {user.statusesCount:,}")
            return True
        else:
            print("‚ùå –¢–µ—Å—Ç API –Ω–µ –≤–¥–∞–≤—Å—è - –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")
        
        # Suggest solutions based on error
        error_str = str(e).lower()
        if "unauthorized" in error_str or "token" in error_str:
            print("üí° –†—ñ—à–µ–Ω–Ω—è: –í–∞—à—ñ cookies –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–º–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É –¥–æ–¥–∞—Ç–∏ –∞–∫–∞—É–Ω—Ç.")
        elif "rate" in error_str:
            print("üí° –†—ñ—à–µ–Ω–Ω—è: –û–±–º–µ–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ. –ó–∞—á–µ–∫–∞–π—Ç–µ 15 —Ö–≤–∏–ª–∏–Ω —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")
        elif "account" in error_str:
            print("üí° –†—ñ—à–µ–Ω–Ω—è: –°–ø–æ—á–∞—Ç–∫—É –¥–æ–¥–∞–π—Ç–µ –∞–∫–∞—É–Ω—Ç: python quick_add_account.py")
        else:
            print("üí° –†—ñ—à–µ–Ω–Ω—è: –ó–∞–ø—É—Å—Ç—ñ—Ç—å –ø–æ–≤–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É: python check_account.py")
        
        return False


async def main():
    """Main function."""
    success = await quick_test()
    
    if success:
        print("\nüéâ –ê–∫–∞—É–Ω—Ç –ø—Ä–∞—Ü—é—î!")
        print("üöÄ –ì–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤!")
        print("\nüìù –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python extract_post_data.py <tweet_url>")
    else:
        print("\n‚ùå –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫–∞—É–Ω—Ç—É –Ω–µ –≤–¥–∞–ª–∞—Å—è!")
        print("üîß Run detailed check: python check_account.py")
    
    return success


if __name__ == "__main__":
    try:
        result = asyncio.run(main())
        sys.exit(0 if result else 1)
    except KeyboardInterrupt:
        print("\n\nüëã Check cancelled.")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå Unexpected error: {e}")
        sys.exit(1)
