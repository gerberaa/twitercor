#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–∫—Å—ñ –∞–∫–∞—É–Ω—Ç–∞–º–∏
"""
import asyncio
from twitter_automation import TwitterAutomation
from twscrape import API

async def test_account_proxy():
    """–¢–µ—Å—Ç—É—î–º–æ —á–∏ –∞–∫–∞—É–Ω—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –ø—Ä–æ–∫—Å—ñ"""
    print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–∫—Å—ñ –∞–∫–∞—É–Ω—Ç–∞–º–∏")    
    print("=" * 50)
    
    api = API()
    accounts = await api.pool.accounts_info()
    
    if not accounts:
        print("‚ùå –ê–∫–∞—É–Ω—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return
        
    print(f"üë• –ó–Ω–∞–π–¥–µ–Ω–æ {len(accounts)} –∞–∫–∞—É–Ω—Ç—ñ–≤")
    print()
    
    # –¢–µ—Å—Ç—É—î–º–æ –ø–µ—Ä—à–∏–π –∞–∫–∞—É–Ω—Ç
    test_account = accounts[0]
    username = test_account['username']
    
    print(f"üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç—É: @{username}")
    
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ TwitterAutomation —ñ —Ç–µ—Å—Ç—É—î–º–æ API
        automation = TwitterAutomation(api)
        actions_api = automation.create_actions_api_for_account(username)
        
        if actions_api:
            print(f"‚úÖ API —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è @{username}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ IP —á–µ—Ä–µ–∑ httpx
            import httpx
            if hasattr(actions_api, '_client') and actions_api._client:
                # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–∫—Å—ñ –∑ –∫–ª—ñ—î–Ω—Ç–∞
                proxy_info = getattr(actions_api._client, '_proxies', 'No proxy info')
                print(f"üåê –ü—Ä–æ–∫—Å—ñ –∫–ª—ñ—î–Ω—Ç–∞: {proxy_info}")
                
            # –¢–µ—Å—Ç—É—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è IP
            try:
                async with httpx.AsyncClient(
                    proxies=actions_api.proxy if hasattr(actions_api, 'proxy') else None,
                    timeout=10
                ) as client:
                    response = await client.get('https://httpbin.org/ip')
                    ip_data = response.json()
                    print(f"üîó IP –∞–¥—Ä–µ—Å–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å—ñ: {ip_data.get('origin', 'Unknown')}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è IP: {e}")
                
        else:
            print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ API –¥–ª—è @{username}")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")

if __name__ == "__main__":
    asyncio.run(test_account_proxy())